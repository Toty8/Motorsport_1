@using Motorsport1.Services.Data.Interfaces;
@model ArticleDetailsViewModel

@inject IArticleService articleService
@inject ICommentService commentService
@{
    bool isArticleLikedByThisUser = await this.articleService.IsArticleLikedAsync(Model.Id, this.User.GetId()!);
    bool isUserOwner = await this.articleService.IsUserOwnerOfArticleAsync(Model.Id, this.User.GetId()!);
}

<h2 class="text-center">@Model.Title</h2>
<hr />
<div class="container text-center">
    <div class="row">
        <div class="col-3">
            <img class="card-img-top" src="@Model.ImageUrl" alt="Article Image">
        </div>
        <div class="card col-8 border-0">
            <p>(@Model.PublishedDateTime)</p>
            <p>Read <b>@Model.ReadCount</b> times</p>
            <p>@Model.Information</p>
            <p>Likes: <b>@Model.Likes</b></p>
            <div class="form-inline">
            @if (!isArticleLikedByThisUser)
            {
                <form method="post" asp-action="Like" asp-route-id="@Model.Id">
                    <input type="submit" value="Like" class="btn btn-outline-info" />
                </form>
            }
            @if (isUserOwner || this.User.IsAdmin())
            {
                    <a class="ml-2 btn btn-warning" asp-area="" asp-controller="Article" asp-action="Edit"
                       asp-route-id="@Model.Id">Edit</a>
                    <a class="ml-2 btn btn-danger" asp-area="" asp-controller="Article" asp-action="Delete"
                       asp-route-id="@Model.Id">Delete</a>
            }
            </div>
            <p></p>
            <div class="card" id="publisherInfoCard">
                <div class="card-body">
                    <h5 class="card-title mb-3">Publisher Info</h5>
                    <p class="card-text">Name: @Model.Publisher.FullName</p>
                    <p class="card-text">Email: @Model.Publisher.Email</p>
                </div>
            </div>
            <br>
            <div class="form-inline">
                <a class="btn btn-primary" asp-area="" asp-controller="Comment" asp-action="Add" asp-route-id="@Model.Id">Add Comment</a>
            </div>
            <hr>
            <ul class="list-group">
            @foreach (var comment in Model.Comments)
            {
                    bool isUserOwnerOfComment = await this.commentService.IsUserOwnerOfCommentAsync(comment.Id, this.User.GetId()!);
                    <li class="list-group-item commentBox">
                        <h4>@comment.Content</h4>
                        <hr />
                        <small>(@comment.PublishedDateTime)</small>
                        <br>
                        @if (isUserOwnerOfComment || this.User.IsAdmin())
                        {
                            <a class="ml-2 btn btn-warning" asp-area="" asp-controller="Comment" asp-action="Edit"
                           asp-route-commentId="@comment.Id">Edit</a>
                            <a class="ml-2 btn btn-danger" asp-area="" asp-controller="Comment" asp-action="Delete"
                           asp-route-commentId="@comment.Id">Delete</a>
                        }
                    </li>
            }
            </ul>
        </div>
    </div>
</div>